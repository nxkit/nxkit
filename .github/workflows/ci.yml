name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
  VOLTA_FEATURE_PNPM: 1

jobs:
  ci:
    name: Nx Cloud - Main Job
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.11.3
    with:
      number-of-agents: 3
      init-commands: |
        pnpm exec nx-cloud start-ci-run --stop-agents-after="build" --agent-count=3
      parallel-commands: |
        pnpm exec nx-cloud record -- pnpm exec nx workspace-lint
        pnpm exec nx-cloud record -- pnpm exec nx format:check
      parallel-commands-on-agents: |
        pnpm exec nx affected --target=lint --parallel=3
        pnpm exec nx affected --target=test --parallel=3 --ci --code-coverage
        pnpm exec nx affected --target=build --parallel=3

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.11.3
    with:
      number-of-agents: 3

  e2e:
    name: E2E
    needs: [ci, agents]
    runs-on: ubuntu-latest
    env:
      NX_BASE: origin/main
      NX_HEAD: HEAD
    strategy:
      matrix:
        node-version: [16, 18]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node toolchain
        uses: volta-cli/action@v4

      - name: Set Node Version
        run: volta pin node@${{ matrix.node-version }}

      - name: Set node/pnpm versions
        id: versions
        run: |
          node_ver=$( node --version )
          pnpm_ver=$( pnpm --version )
          volta_ver=$( volta --version )
          echo "Volta: ${volta_ver}"
          echo "Node: ${node_ver:1}"
          echo "PNPM: ${pnpm_ver}"
          echo "node_version=${node_ver:1}" >> $GITHUB_OUTPUT
          echo "pnpm_version=${pnpm_ver}" >> $GITHUB_OUTPUT

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Use the node_modules cache if available
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run e2e tests
        run: pnpm exec nx affected --target=e2e --parallel=1
